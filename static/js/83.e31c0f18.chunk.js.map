{"version":3,"file":"static/js/83.e31c0f18.chunk.js","mappings":"mRAYaA,EAAc,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,GAAIC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,MAC3C,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,OACE,iBAAKC,UAAU,uBAAf,WACE,iBAAKA,UAAU,uGAAf,WACE,iBAAMA,UAAU,aAAhB,SAA8BN,EAAGO,OAAO,MACxC,iBAAMD,UAAU,aAAhB,SAA8BL,EAAUO,MAAM,KAAK,MACnD,iBAAMF,UAAU,aAAhB,yBACA,UAACG,EAAA,EAAD,CACEC,QAAQ,cACRC,QAAS,kBAAMN,GAAaD,EAAnB,EACTE,UAAU,aAHZ,UAKGF,IAAY,SAAC,MAAD,CAAaQ,KAAM,MAC9BR,IAAY,SAAC,MAAD,CAAWQ,KAAM,YAGnC,iBACEN,UAAS,UACPF,EAAW,UAAY,WADhB,8DADX,WAKE,eAAIE,UAAU,MAAd,SACGJ,EAAMW,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,SAAT,OACT,SAACC,EAAA,EAAD,CACEF,KAAMA,EACNC,SAAUA,EAEVT,UAAU,UADLQ,EAAKd,GAJH,OASb,iBAAKM,UAAU,wBAAf,mBACS,IACNJ,EAAMe,QACL,SAACC,EAAD,OAAQJ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,SAAd,OAA8BG,EAAOJ,EAAKK,MAAQJ,CAAlD,GACA,WAMX,E,8BC7CYK,EAAa,WACxB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAe,SAACC,GAAD,OAAWA,EAAMF,IAAjB,IAC5B,GAA4BtB,EAAAA,EAAAA,UAAkB,IAA9C,eAAOyB,EAAP,KAAeC,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACJL,GACFM,EAAAA,EAAAA,YAEGC,MAAK,SAACJ,GACLC,EAAUD,EACX,IACAK,OAAM,WACLV,GAASW,EAAAA,EAAAA,GAAS,wBAClBb,EAAS,cACV,GAEN,GAAE,KAGD,iBAAKf,UAAU,4CAAf,WACE,iBAAKA,UAAU,6HAAf,WACE,kCACA,oCACA,sCACA,wCALJ,OAOGsB,QAPH,IAOGA,OAPH,EAOGA,EAAQf,KAAI,SAACsB,GAAD,OACX,mBAACpC,GAAD,kBAAiBoC,GAAjB,IAAwBC,IAAKD,EAAMnC,KADxB,IAGO,KAAb,OAAN4B,QAAM,IAANA,OAAA,EAAAA,EAAQS,UAAgB,6CAG9B,EAED,G","sources":["features/orders/components/OrderRecord.tsx","pages/OrdersPage.tsx"],"sourcesContent":["import { Button } from '../../../components/elements/Button';\r\nimport { BiDownArrow, BiUpArrow } from 'react-icons/bi';\r\nimport { ItemRecord } from '../../../components/ItemRecord';\r\nimport { OrderItem } from '../../../services/orders/types';\r\nimport { useState } from 'react';\r\n\r\nexport type OrderRecordProps = {\r\n  id: string;\r\n  createdAt: string;\r\n  items: OrderItem[];\r\n};\r\n\r\nexport const OrderRecord = ({ id, createdAt, items }: OrderRecordProps) => {\r\n  const [isHidden, setIsHidden] = useState(true);\r\n  return (\r\n    <div className=\"flex flex-col w-full\">\r\n      <div className=\"grid grid-cols-[repeat(4,_minmax(0,_1fr))] justify-items-center items-center w-full text-sm border-b\">\r\n        <span className=\"col-span-1\">{id.slice(-6)}</span>\r\n        <span className=\"col-span-1\">{createdAt.split('T')[0]}</span>\r\n        <span className=\"col-span-1\">Processing</span>\r\n        <Button\r\n          variant=\"transparent\"\r\n          onClick={() => setIsHidden(!isHidden)}\r\n          className=\"col-span-1\"\r\n        >\r\n          {isHidden && <BiDownArrow size={24} />}\r\n          {!isHidden && <BiUpArrow size={24} />}\r\n        </Button>\r\n      </div>\r\n      <div\r\n        className={`${\r\n          isHidden ? 'max-h-0' : 'max-h-96'\r\n        } overflow-hidden transition-all duration-500 flex flex-col`}\r\n      >\r\n        <ul className=\"p-4\">\r\n          {items.map(({ item, quantity }) => (\r\n            <ItemRecord\r\n              item={item}\r\n              quantity={quantity}\r\n              key={item.id}\r\n              className=\"w-full\"\r\n            />\r\n          ))}\r\n        </ul>\r\n        <div className=\"ml-auto mt-8 border-t\">\r\n          Total:{' '}\r\n          {items.reduce(\r\n            (sum, { item, quantity }) => (sum += item.price * quantity),\r\n            0\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { OrderRecord } from '../features/orders';\r\nimport { useAppSelector } from '../redux/hooks';\r\nimport { setError } from '../redux/reducers/errorReducer';\r\nimport orderService from '../services/orders/orderService';\r\nimport { Order } from '../services/orders/types';\r\n\r\nexport const OrdersPage = () => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const user = useAppSelector((state) => state.user);\r\n  const [orders, setOrders] = useState<Order[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      orderService\r\n        .getOrders()\r\n        .then((orders) => {\r\n          setOrders(orders);\r\n        })\r\n        .catch(() => {\r\n          dispatch(setError('Order loading error'));\r\n          navigate('/shop/error');\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center\">\r\n      <div className=\"grid grid-cols-[repeat(4,_minmax(0,_1fr))] justify-items-center gap-4 w-full font-semibold border-b-4 border-b-btn-primary\">\r\n        <span>ID</span>\r\n        <span>Date</span>\r\n        <span>Status</span>\r\n        <span>Expand</span>\r\n      </div>\r\n      {orders?.map((order) => (\r\n        <OrderRecord {...order} key={order.id} />\r\n      ))}\r\n      {orders?.length === 0 && <div>Nothing here!</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n"],"names":["OrderRecord","id","createdAt","items","useState","isHidden","setIsHidden","className","slice","split","Button","variant","onClick","size","map","item","quantity","ItemRecord","reduce","sum","price","OrdersPage","navigate","useNavigate","dispatch","useDispatch","user","useAppSelector","state","orders","setOrders","useEffect","orderService","then","catch","setError","order","key","length"],"sourceRoot":""}